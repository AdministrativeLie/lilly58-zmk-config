/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>



#include <lvgl/lvgl.h>

lv_obj_t *battery_label;
lv_obj_t *bluetooth_label;
lv_obj_t *layer_indicator;

void toggle_display_layer() {
    // Toggle the display layers
    info_layer_active = !info_layer_active;

    // Update the layer indicator
    if (info_layer_active) {
        lv_label_set_text(layer_indicator, "Default Layer");
    } else {
        lv_label_set_text(layer_indicator, "Lower/Raise Layer");
    }

    // Update other widgets as needed based on the layer
    // For example, update Bluetooth status and battery percentage
    if (info_layer_active) {
        // Update Bluetooth status label
        lv_label_set_text(bluetooth_label, "Bluetooth: Connected");

        // Update battery percentage label
        lv_label_set_text(battery_label, "Battery Level: XX%");
    } else {
        // Update Bluetooth status label
        lv_label_set_text(bluetooth_label, "Bluetooth: Disconnected");

        // Update battery percentage label
        lv_label_set_text(battery_label, "Battery Level: N/A");
    }
}

void init_display_layers() {
    // Create information layer
    layer_info = lv_obj_create(lv_scr_act(), NULL);

    // Add battery label
    battery_label = lv_label_create(layer_info, NULL);
    lv_label_set_text(battery_label, "Battery Level: XX%");
    lv_obj_align(battery_label, NULL, LV_ALIGN_IN_TOP_LEFT, 10, 10);

    // Add Bluetooth status label
    bluetooth_label = lv_label_create(layer_info, NULL);
    lv_label_set_text(bluetooth_label, "Bluetooth: Connected");
    lv_obj_align(bluetooth_label, NULL, LV_ALIGN_IN_TOP_LEFT, 10, 40);

    // Add layer indicator label
    layer_indicator = lv_label_create(layer_info, NULL);
    lv_label_set_text(layer_indicator, "Default Layer");
    lv_obj_align(layer_indicator, NULL, LV_ALIGN_IN_TOP_LEFT, 10, 70);

    // Create images layer
    layer_images = lv_obj_create(lv_scr_act(), NULL);
    lv_obj_set_hidden(layer_images, true);
}

void init_display() {
    lv_init();
    init_display_layers();
}

void main() {
    init_display();
    // Add other initialization code here

    while (1) {
        // Main loop
    }
}



#define default 0
#define lower 1
#define raise 2


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BSPC  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | ENTER |
//                     | ALT  | GUI  | LOWER|  SPACE |  | SPACE | RAISE|  DEL  | GUI   |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RET
                        &kp LALT &kp LGUI &mo 1  &kp SPACE  &kp SPACE  &mo 2  &kp DEL &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |  F11  |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F12  |
// | BT_NXT|     |     |      |      |      |                   |      |       |  UP   |      |       | PSCRN |
// | BT_CLR|     |     |      |      |      |                   |      | LEFT  |  DOWN | RIGHT|       |       |
// |       | UNDO| CUT | COPY | PASTE|      |        |  |       |      |       |       |      |       |       |
//                     |      |      |      |        |  |       | TOG2 |       |       |
            bindings = <
&kp F11    &kp F1     &kp F2     &kp F3     &kp F4        &kp F5                    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F12
&bt BT_NXT &trans     &trans     &trans     &trans        &trans                    &trans    &trans    &kp UP    &trans    &trans    &kp PSCRN
&bt BT_CLR &trans     &trans     &trans     &trans        &trans                    &trans    &kp LEFT  &kp DOWN  &kp RIGHT &trans    &trans
&trans     &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)     &trans   &trans   &trans  &trans    &trans    &trans    &trans    &trans    &trans
                                 &trans     &trans        &trans   &trans   &trans  &tog raise    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   | TOG2 |       |   /   |  *   |   -   |       |
// |       |     |     |  UP  |      |      |                   |      |   7   |   8   |  9   |   +   |       |
// |       |     | LEFT|  DN  | RIGHT|      |                   |      |   4   |   5   |  6   |   +   |       |
// |       |     |     |      |      |      |        |  |       |      |   1   |   2   |  3   | ENTER |       |
//                     |      |      |      |        |  |       |      |   0   |   .   |
            bindings = <
&none   &none  &none    &none    &none     &none                        &tog raise  &none    &kp FSLH &kp KP_MULTIPLY &kp MINUS   &trans
&none   &none  &none    &kp UP   &none     &none                        &none       &kp N7   &kp N8   &kp N9          &kp KP_PLUS &none 
&none   &none  &kp LEFT &kp DOWN &kp RIGHT &none                        &none       &kp N4   &kp N5   &kp N6          &kp KP_PLUS &none
&none   &none  &none    &none    &none     &none     &trans   &trans    &none       &kp N1   &kp N2   &kp N3          &kp RET     &trans
                        &trans   &trans    &trans    &trans   &trans    &trans      &kp N0   &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
